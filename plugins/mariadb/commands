#!/bin/bash
set -e; 

# Check if name is specified
if [[ $1 == md:* ]]; then
    if [[ -z $2 ]]; then
        echo "You must specify an app name"
        exit 1
    else
        APP="$2"
        # Check if app exists with the same name
        if [[ -d "/home/git/$APP" ]]; then
            APP_EXISTS=true
        else
            APP_EXISTS=false
        fi
    fi
fi

case "$1" in

  md:create)
    DB_IMAGE=md/$APP
    # Generate a random password for DB user
    DB_PASSWORD=$(< /dev/urandom tr -dc A-Za-z0-9 | head -c 16)
    # Temporarily store it to a file
    echo $DB_PASSWORD > "/tmp/db_pwd_$APP"
    chown git: "/tmp/db_pwd_$APP"
    # Prepare the container
    if [[ ! -z $3 ]]; then
       # Execute SQL statements if specified
       SQL="$3"
    else
       SQL=""
    fi
    ID=$(docker run -d dokku/mariadb /usr/bin/prepare_mariadb.sh $DB_PASSWORD $SQL)
    docker wait $ID > /dev/null
    ID=$(docker commit $ID)
    docker tag $ID $DB_IMAGE
    # Run the container
    ID=$(docker run -p 3306 -d $DB_IMAGE /usr/bin/start_mariadb.sh)
    dokku md:link $APP $APP
    echo
    echo "-----> MariaDB container created: $DB_IMAGE"
    dokku md:info $APP
    ;;

  md:delete)
    DB_IMAGE=md/$APP
    ID=$(docker ps -a | grep "$DB_IMAGE":latest |  awk '{print $1}')
    # Stop the container
    docker stop $ID
    DB_IMAGE=$(docker images | grep "$DB_IMAGE " |  awk '{print $3}')
    # Remove image
    docker rmi $DB_IMAGE
    echo
    echo "-----> MariaDB container deleted: $DB_IMAGE"
    ;;

  md:info)
    DB_IMAGE=md/$APP
    ID=$(docker ps -a | grep "$DB_IMAGE":latest |  awk '{print $1}')
    IP=$(docker inspect $ID | grep IPAddress | awk '{ print $2 }' | tr -d ',"')
    PORT=$(docker port $ID 3306)
    echo
    echo "       Host: $IP"
    echo "       User: 'root'"
    if [[ -f "/tmp/db_pwd_$APP" ]]; then
        echo "       Password: '$(cat "/tmp/db_pwd_$APP")'"
    fi
    echo "       Database: 'db'"
    echo "       Public port: $PORT"
    echo
    ;;

  md:link)
    if $APP_EXISTS; then
        # Check argument
        if [[ -z $3 ]]; then
            echo "You must specify a database name"
            exit 1
        fi
        DB_IMAGE="md/$3"
        # Check temporarily file
    	if [[ ! -f "/tmp/db_pwd_$APP" ]]; then
            echo "Database is already linked"
            exit 1
        fi
        DB_PASSWORD=$(cat "/tmp/db_pwd_$APP")
        ID=$(docker ps -a | grep "$DB_IMAGE":latest |  awk '{print $1}')
        IP=$(docker inspect $ID | grep IPAddress | awk '{ print $2 }' | tr -d ',"')
        # Write DATABASE_URL to app's ENV file
        URL="DATABASE_URL=mysql://root:$DB_PASSWORD@$IP/db"
        cat "/home/git/$APP/ENV" | grep "$URL" || echo "export $URL" >> "/home/git/$APP/ENV"
        echo
        echo "-----> $APP linked to $DB_IMAGE database"
        echo "       $URL"
        rm "/tmp/db_pwd_$APP"
    fi
    ;;
    
  md:logs)
    DB_IMAGE=md/$APP
    ID=$(docker ps -a | grep "$DB_IMAGE" |  awk '{print $1}')
    docker logs $ID | tail -n 100
    ;;

  help)
    cat && cat<<EOF
    md:create <app> [sql] Create a MariaDB container (optionnaly execute SQL statements)
    md:delete <app>       Delete specified MariaDB container
    md:info <app>         Display database informations
    md:link <app> <db>    Link an app to a MariaDB database
    md:logs <app>         Display last logs from MariaDB container
EOF
    ;;

esac
